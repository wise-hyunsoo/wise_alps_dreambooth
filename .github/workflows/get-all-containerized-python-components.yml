name: All Containerized Python Components

permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    inputs:
      head-ref:
        required: false
        type: string
    outputs:
      components:
        description: "All Containerized Python Components"
        value: ${{ jobs.get-all-components.outputs.components }}

jobs:
  get-all-components:
    name: Get all
    outputs:
      components: ${{ steps.all-components.outputs.components }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.head-ref }}

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Get all components
        id: all-components
        run: |
          all_containerized_python_components=()
          read -a CONTAINERIZED_PYTHON_COMPONENTS <<< $(python scripts/support/find_containerized_python_components.py 2>&1)
          echo "CONTAINERIZED_PYTHON_COMPONENTS=${CONTAINERIZED_PYTHON_COMPONENTS[@]}"
          for component in "${CONTAINERIZED_PYTHON_COMPONENTS[@]}"; do
            all_containerized_python_components+=("$component")
          done

          for component in ${all_containerized_python_components[@]}; do
            echo "$component is containerized python components."
          done

          echo "components=${all_containerized_python_components[@]}" >> $GITHUB_OUTPUT
